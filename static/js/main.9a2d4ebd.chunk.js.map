{"version":3,"sources":["blockchain/key.js","blockchain/storage.js","blockchain/errors.js","blockchain/blockchain.js","blockchain/index.js","protocol/message.js","utils/log.js","utils/events.js","utils/settings.js","protocol/behavior.js","protocol/errors.js","protocol/behaviors.js","network/peer.js","network/storage.js","network/PeerManager.js","protocol/factory.js","network/service.js","components/NavBar.js","components/Drawer/PeerDrawer.js","components/Drawer/ChainDrawer.js","components/Drawer/BlockDrawer.js","components/BlockContent.js","components/Manager.js","components/App.js","serviceWorker.js","index.js","blockchain/block.js"],"names":["Key","gen","arguments","length","undefined","Object","_home_travis_build_Infnote_infnotechain_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","keyPair","bitcoin","ECPair","makeRandom","toWIF","payments","p2pkh","pubkey","publicKey","address","wif","key","fromWIF","bs58","decode","signature","recovery","compressed","Buffer","concat","alloc","buffer","Error","flagByte","readUInt8","slice","encode","toString","message","secp256k1","sign","createHash","update","digest","privateKey","encodeSignature","hash","isBuffer","sig","decodeSignature","recover","getAddress","Storage","block","chainID","index","localStorage","setItem","toJSON","height","getItem","parseInt","code","desc","classCallCheck","err","Blockchain","id","blockchain","toAddress","updateChainCount","info","getBlock","Block","fromJSON","payload","prevHash","blockHash","crypto","sha256","dataForHashing","isValid","InvalidBlockError","MismatchedIDError","exitsBlock","ForkError","ExistBlockError","validateBlock","saveBlock","count","getChainCount","__webpack_require__","d","__webpack_exports__","blockchain_block","Message","type","data","generateID","Math","random","substr","jsonString","JSON","parse","fromDict","behavior","firstCap","RegExp","allCap","name","constructor","replace","toLowerCase","toDict","error","stringify","log","Prefix","Level","setLevel","eventEmitter","EventEmitter","SETTINGS","chains","peers","Behavior","_this","possibleConstructorReturn","getPrototypeOf","call","validateErr","messageID","messageIDs","bsInstance","BroadcastService","handler","createClass","value","Info","props","getMembers","forEach","i","parser","UAParser","version","PeerManager","getPeersCount","platform","getBrowser","full_node","_this2","dict","incompatibleProtocolVersion","badRequestError","behaviors","push","RequestPeers","keys","includes","RequestBlocks","chain_id","from","to","_this3","_this4","ResponsePeers","getPeers","_this5","_this6","protocol","url","URLError","addPeers","_this7","_this8","chainNotAcceptError","Chain_id","blocks","size","ResponseBlocks","_this9","blockObjects","_this10","blockDict","blockValidationError","BroadcastBlock","_this11","blockObject","_this12","DuplicateBroadcastError","shared","emit","Peer","socket","handleMessage","handleClose","handleConnection","WebSocket","onopen","create","send","onerror","onclose","onmessage","response","messages","msg","close","readyState","OPEN","PeerStorage","peer","result","parserPeer","flag","hostname","port","savePeers","_peers","map","p","indexOf","splice","isMigrated","migrate","path","addPeer","removePeers","handleJSONData","fromError","invalidMessageError","validate","react","reduce","b","fromBehavior","Service","handleBroadcast","broadcast","broadcastBlock","urls","connect","notBroadcastAddress","NavBar","state","menuOpen","modalOpen","handleOpenPeerModal","setState","handleAddPeer","handleModalClose","handleClick","event","handleChange","target","classes","_this$state","modal","react_default","a","createElement","Modal_default","open","Boolean","onClose","className","paper","index_es","required","label","defaultValue","textField","margin","onChange","variant","color","onClick","position","navbar","IconButton_default","aria-label","Menu_default","Component","withStyles","theme","objectSpread","mixins","toolbar","flex","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","outline","marginLeft","marginRight","PeerDrawer","selectedIndex","handleRemove","_this$props","onSelect","item","button","selected","primary","primaryTypographyProps","bind","ChainDrawer","secondary","BlockDrawer","BlockContent","json","date","Date","time","isJSON","atob","match","cls","test","e","content","space","toLocaleDateString","toLocaleTimeString","prev_hash","component","style","dangerouslySetInnerHTML","__html","wordBreak","overflow","fontFamily","Manager","selectedPeer","selectedChain","chainList","blockList","handleIncomingBlock","newChainList","assign","filter","chainId","currBlockList","unshift","handlePeerAdded","handlePeerRemoved","handleSelectPeer","isConnect","handleSelectChain","indexes","handleSelectBlock","on","_this$state2","container","grid","direction","Drawer_PeerDrawer","Drawer_ChainDrawer","Drawer_BlockDrawer","components_BlockContent","App","service","components_NavBar","components_Manager","left","right","top","bottom","display","flexDirection","window","location","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","recoverAddress"],"mappings":"qNAKMA,aAyCF,SAAAA,IAAwB,IAAZC,IAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAAG,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,GAAAO,KAxCxBC,QAAU,KAyCFP,IACAM,KAAKC,QAAUC,IAAQC,OAAOC,kEAVlC,OAAOJ,KAAKC,QAAQI,4CAKpB,OADoBH,IAAQI,SAASC,MAAM,CAAEC,OAAQR,KAAKC,QAAQQ,YAA1DC,0CAlCGC,GACX,IAAIC,EAAM,IAAInB,GAAI,GAElB,OADAmB,EAAIX,QAAUC,IAAQC,OAAOU,QAAQF,GAC9BC,qCAGOH,GAEd,OADoBP,IAAQI,SAASC,MAAM,CAAEC,OAAQM,IAAKC,OAAON,KAAzDC,gDAIWM,EAAWC,EAAUC,GAExC,OADIA,IAAYD,GAAY,GACrBE,EAAOC,OAAO,CAACD,EAAOE,MAAM,EAAGJ,EAAW,IAAKD,4CAGnCM,GACnB,GAAsB,KAAlBA,EAAO1B,OAAe,MAAM,IAAI2B,MAAM,4BAE1C,IAAIC,EAAWF,EAAOG,UAAU,GAAK,GACrC,GAAID,EAAW,EAAG,MAAM,IAAID,MAAM,+BAElC,MAAO,CACHL,cAA0B,EAAXM,GACfP,SAAqB,EAAXO,EACVR,UAAWM,EAAOI,MAAM,yDAoB5B,OAAOZ,IAAKa,OAAO3B,KAAKC,QAAQQ,WAAWmB,wCAG1CC,GACD,IAAIb,EAAYc,IAAUC,KAAKC,IAAW,UAAUC,OAAOJ,GAASK,SAAUlC,KAAKC,QAAQkC,YAC3F,OAAOrB,IAAKa,OAAOlC,EAAI2C,gBAAgBpB,EAAUA,UAAWA,EAAUC,UAAU,IAAOW,oDAGrEZ,EAAUa,GAE5B,IAAIQ,EAAOL,IAAW,UAAUC,OAAOJ,GAASK,SAC3Cf,EAAOmB,SAAStB,KAAYA,EAAYF,IAAKC,OAAOC,IACzD,IAAIuB,EAAM9C,EAAI+C,gBAAgBxB,GAC1BP,EAAYK,IAAKa,OAAOG,IAAUW,QAAQJ,EAAME,EAAIvB,UAAWuB,EAAItB,UAAU,IAAOW,WAExF,OADanC,EAAIiD,WAAWjC,YAKrBhB,sPChDAkD,yGAvBMC,EAAOC,GACpB,IAAIC,EAAQD,EAAU,IAAMD,EAAK,OAAWhB,WAC5C,OAAOmB,aAAaC,QAAQF,EAAOF,EAAMK,2CAG7BC,EAAQL,GACpB,IAAIC,EAAQD,EAAU,IAAMK,EAAOtB,WACnC,OAAOmB,aAAaI,QAAQL,yCAGXD,GACjB,IAAIC,EAAQD,EACZ,OAAmC,MAA/BE,aAAaI,QAAQL,GACd,EACJM,SAASL,aAAaI,QAAQL,6CAGjBD,EAASK,GAC7B,IAAIJ,EAAQD,EACZ,OAAOE,aAAaC,QAAQF,EAAOI,EAAOtB,qBCOnCL,aA1BX,SAAAA,EAAY8B,EAAMC,GAAOxD,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAuB,GACrBvB,KAAKqD,KAAOA,EACZrD,KAAKsD,KAAOA,wEAGYE,GACxB,OAAO,IAAIjC,EAAM,uBAAwBiC,6CAGpBA,GACrB,OAAO,IAAIjC,EAAM,oBAAqBiC,qCAGzBA,GACb,OAAO,IAAIjC,EAAM,YAAaiC,2CAGXA,GACnB,OAAO,IAAIjC,EAAM,kBAAmBiC,6CAGfA,GACrB,OAAO,IAAIjC,EAAM,oBAAqBiC,YC2D/BC,aAnEX,SAAAA,EAAYC,GAAK5D,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAyD,GACbzD,KAAKY,IAAM,KACXZ,KAAK0D,GAAKA,kEARQ9C,GAClB,IAAI+C,EAAa,IAAIF,EAAW7C,EAAIgD,aAEpC,OADAD,EAAW/C,IAAMA,EACV+C,4DAgBMT,GACbP,EAAQkB,iBAAiB7D,KAAK0D,GAAIR,oCAG7BA,GAEL,IAAIY,EAAOnB,EAAQoB,SAASb,EAAQlD,KAAK0D,IACzC,OAAY,MAARI,EACO,KAEJE,IAAMC,SAASH,uCAGdI,EAAShB,GACjB,IAAIN,EAAQ,IAAIoB,IAUhB,OATApB,EAAMsB,QAAUA,EAChBtB,EAAMM,OAASA,EACfN,EAAMuB,SAAW,GAEbvB,EAAMM,OAAS,IACfN,EAAMuB,SAAWnE,KAAK+D,SAASnB,EAAMM,OAAS,GAAGkB,WAErDxB,EAAMwB,UAAYtD,IAAKa,OAAO0C,SAAOC,OAAO1B,EAAM2B,eAAgB,SAClE3B,EAAM5B,UAAYhB,KAAKY,IAAImB,KAAKa,EAAM2B,gBAC/B3B,wCAGGA,GACV,IAAwB,IAApBA,EAAM4B,UACN,OAAOjD,EAAMkD,kBAAkB,sCACnC,GAAI7B,EAAMC,UAAY7C,KAAK0D,GACvB,OAAOnC,EAAMmD,kBAAkB,kCACnC,IAAIC,EAAa3E,KAAK+D,SAASnB,EAAMM,QACrC,OAAkB,MAAdyB,EACKA,EAAWR,WAAavB,EAAMuB,UAAcQ,EAAWP,YAAcxB,EAAMwB,UACrE7C,EAAMqD,UAAU,4BACpBrD,EAAMsD,gBAAgB,uBAE1B,uCAGDjC,GACN,OAAiC,MAA7B5C,KAAK8E,cAAclC,KACnBD,EAAQoC,UAAUnC,EAAO5C,KAAK0D,IACX,OAAf1D,KAAKgF,MACLhF,KAAK6D,iBAAiBjB,EAAMM,QACvBN,EAAMM,OAAS,EAAIlD,KAAKgF,OAC7BhF,KAAK6D,iBAAiBjB,EAAMM,OAAS,IAClC,iCAvDX,OAAOP,EAAQsC,cAAcjF,KAAK0D,oCAIlC,OAA2C,IAAnCf,EAAQsC,cAAcjF,KAAK0D,aCzB3CwB,EAAAC,EAAAC,EAAA,sBAAAxE,EAAA,IAAAsE,EAAAC,EAAAC,EAAA,sBAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,sBAAAzB,sJCyDe2B,aAvBX,SAAAA,IAAiD,IAArCC,EAAqC5F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9B,KAAM6F,EAAwB7F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAM+D,EAAW/D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAAMG,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAsF,GAC7CtF,KAAKuF,KAAOA,EACZvF,KAAKwF,KAAOA,EAERxF,KAAK0D,GADE,OAAPA,EACU4B,EAAQG,aAER/B,gEAtCd,OAAOgC,KAAKC,SAAS/D,SAAS,IAAIgE,OAAO,oCAG7BC,GACZ,IAAIL,EAAOM,KAAKC,MAAMF,GAEtB,OADcP,EAAQU,SAASR,oCAInBA,GACZ,IAAI3D,EAAU,IAAIyD,EAIlB,OAHAzD,EAAQ0D,KAAOC,EAAI,KACnB3D,EAAQ2D,KAAOA,EAAI,KACnB3D,EAAQ6B,GAAK8B,EAAI,GACV3D,uCAGSoE,GAChB,IAAIC,EAAW,IAAIC,OAAO,oBACtBC,EAAS,IAAID,OAAO,mBAEpBE,EAAOJ,EAASK,YAAYD,KAIhC,OAAO,IAAIf,GAFXe,GADAA,EAAOA,EAAKE,QAAQL,EAAU,UAClBK,QAAQH,EAAQ,UAEJI,cAAeP,EAASQ,4CAGnCC,GACb,OAAO,IAAIpB,EAAQ,QAASoB,EAAMD,4DAkBlC,MALW,CACPlB,KAAQvF,KAAKuF,KACbC,KAAQxF,KAAKwF,KACb9B,GAAM1D,KAAK0D,qCAMf,OAAOoC,KAAKa,UAAU3G,KAAKyG,uDClDtBG,EAAMC,IAAOC,KAC1BF,EAAIG,SAAS,aCFFC,EAAe,UAAIC,cCQfC,EAVE,CACbC,OAAQ,CACJ,qCACA,qCAEJC,MAAO,CACH,sCCDOC,gJC8DA9F,cAhEX,SAAAA,EAAY8B,EAAMC,GAAM,IAAAgE,EAAA,OAAAxH,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAuB,IACpB+F,EAAAxH,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAAyB,GAAAkG,KAAAzH,QACKqD,KAAOA,EACZiE,EAAKhE,KAAOA,EAHQgE,wEAWpB,MAJW,CACPjE,KAAQrD,KAAKqD,KACbC,KAAQtD,KAAKsD,uCAMjB,OAAOwC,KAAKa,UAAU3G,KAAKyG,6CAwC3B,OAAO,qCAKP,MADgB,iDAzCOjD,GACvB,OAAO,IAAIjC,EAAM,iBAAkBiC,gDAGXA,GACxB,OAAO,IAAIjC,EAAM,uBAAwBiC,uDAGVA,GAC/B,OAAO,IAAIjC,EAAM,mCAAoCiC,2CAGlCA,GACnB,OAAO,IAAIjC,EAAM,kBAAmBiC,2CAGjBA,GACnB,OAAO,IAAIjC,EAAM,kBAAmBiC,+CAGbA,GACvB,OAAO,IAAIjC,EAAM,sBAAuBiC,gDAGhBkE,GACxB,OAAO,IAAInG,EAAMmG,EAAYrE,KAAMqE,EAAYpE,uCAGnCE,GACZ,OAAO,IAAIjC,EAAM,WAAYiC,mDAGFmE,GAC3B,OAAO,IAAIpG,EAAM,0BAA2BoG,EAAY,8BApD5CN,sCCMhBO,EAAa,GAEbC,EAAa,KACJC,EAAb,oBAAAA,IAAAhI,OAAAyD,EAAA,EAAAzD,CAAAE,KAAA8H,GAAA9H,KACI+H,QAAU,KADd,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAgI,EAAA,OAAAlH,IAAA,SAAAqH,MAAA,WAOQ,OAHmB,OAAfJ,IACAA,EAAa,IAAIC,GAEdD,MAPfC,EAAA,GAWMI,cAqBF,SAAAA,EAAYC,GAAO,IAAAb,EAAA,OAAAxH,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAkI,GACfZ,EAAAxH,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAAoI,GAAAT,KAAAzH,OACImI,GACAD,EAAKE,aAAaC,QAAQ,SAAAhC,GAAI,OAAIiB,EAAKjB,GAAQ8B,EAAM9B,KAH1CiB,iFAnBf,MAAO,CAAC,UAAW,QAAS,SAAU,WAAY,8CAIlD,IAAIH,EAAS,GACb,IAAK,IAAImB,KAAKpB,EAASC,OAAO,CAC1B,IAAIxD,EAAa,IAAIF,IAAWyD,EAASC,OAAOmB,IAChDnB,EAAOxD,EAAWD,IAAMC,EAAWqB,MAEvC,IAAIuD,EAAS,IAAIC,IACjB,OAAO,IAAIN,EAAK,CACZO,QAAY,MACZrB,MAAUsB,EAAYC,gBACtBxB,OAAWA,EACXyB,SAAaL,EAAOM,aACpBC,WAAc,sDAWlB,OAAOhD,KAAKa,UAAU3G,KAAKyG,2CAGtB,IAAAsC,EAAA/I,KACDgJ,EAAO,GAEX,OADAd,EAAKE,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2C,EAAK3C,GAAQ0C,EAAK1C,KAC7C2C,qCAIP,MAAqB,QAAjBhJ,KAAKyI,QACElH,EAAM0H,4BAA4B,6BACzCjJ,KAAKoH,MAAQ,EACN7F,EAAM2H,gBAAgB,6CAC1B,qCAIP,IAAIC,EAAY,GAGhB,IAAK,IAAIb,KAFLtI,KAAKoH,MAAQ,GACb+B,EAAUC,KAAK,IAAIC,EAAa,CAACrE,MAAQhF,KAAKoH,SACpCtH,OAAOwJ,KAAKtJ,KAAKmH,QAAS,CACpC,IAAIvG,EAAMd,OAAOwJ,KAAKtJ,KAAKmH,QAAQmB,GAC/BL,EAAQjI,KAAKmH,OAAOvG,GACxB,IAAsC,IAAlCsG,EAASC,OAAOoC,SAAS3I,GAA7B,CAEA,IAAI+C,EAAa,IAAIF,IAAW7C,GAC5B+C,EAAWqB,OAASiD,GAExBkB,EAAUC,KAAK,IAAII,EAAc,CAACC,SAAW7I,EAAK8I,KAAO/F,EAAWqB,MAAO2E,GAAK1B,EAAQ,MAE5F,OAAOkB,SA3DI9B,GA+DbgC,cAKF,SAAAA,EAAYlB,GAAO,IAAAyB,EAAA,OAAA9J,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAqJ,GACfO,EAAA9J,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAAuJ,GAAA5B,KAAAzH,OACImI,GACAkB,EAAajB,aAAaC,QAAQ,SAAAhC,GAAI,OAAIuD,EAAKvD,GAAQ8B,EAAM9B,KAHlDuD,iFAHf,MAAO,CAAC,2DAUR,OAAO9D,KAAKa,UAAU3G,KAAKyG,2CAGtB,IAAAoD,EAAA7J,KACDgJ,EAAO,GAEX,OADAK,EAAajB,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2C,EAAK3C,GAAQwD,EAAKxD,KACrD2C,qCAIP,OAAIhJ,KAAKgF,OAAS,EACPzD,EAAM2H,gBAAgB,6CAC1B,qCAIP,IAAIC,EAAY,GAGhB,OADAA,EAAUC,KAAK,IAAIU,EAAc,CAAC1C,MAASsB,EAAYqB,SAAS/J,KAAKgF,UAC9DmE,SA/BY9B,GAmCrByC,cAKF,SAAAA,EAAY3B,GAAO,IAAA6B,EAAA,OAAAlK,OAAAyD,EAAA,EAAAzD,CAAAE,KAAA8J,GACfE,EAAAlK,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAAgK,GAAArC,KAAAzH,OACImI,GACA2B,EAAc1B,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2D,EAAK3D,GAAQ8B,EAAM9B,KAHnD2D,iFAHf,MAAO,CAAC,2DAUR,OAAOlE,KAAKa,UAAU3G,KAAKyG,2CAGtB,IAAAwD,EAAAjK,KACDgJ,EAAO,GAEX,OADAc,EAAc1B,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2C,EAAK3C,GAAQ4D,EAAK5D,KACtD2C,qCAIP,IAAK,IAAIpI,KAAOZ,KAAKoH,MAAO,CACxB,IAAI8C,EAAWC,IAAIpE,MAAM/F,KAAKoH,MAAMxG,IAAMsJ,SAC1C,GAAkB,SAAbA,GAAsC,QAAbA,EAC1B,OAAO3I,EAAM6I,SAAS,uBAE9B,OAAO,qCAMP,OADA1B,EAAY2B,SAASrK,KAAKoH,OADV,UA/BIC,GAqCtBmC,cAKF,SAAAA,EAAYrB,GAAO,IAAAmC,EAAA,OAAAxK,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAwJ,GACfc,EAAAxK,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAA0J,GAAA/B,KAAAzH,OACImI,GACAqB,EAAcpB,aAAaC,QAAQ,SAAAhC,GAAI,OAAIiE,EAAKjE,GAAQ8B,EAAM9B,KAHnDiE,iFAHf,MAAO,CAAC,WAAW,OAAO,wDAU1B,OAAOxE,KAAKa,UAAU3G,KAAKyG,2CAGtB,IAAA8D,EAAAvK,KACDgJ,EAAO,GAEX,OADAQ,EAAcpB,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2C,EAAK3C,GAAQkE,EAAKlE,KACtD2C,qCAIP,OAAgD,IAA5C9B,EAASC,OAAOoC,SAASvJ,KAAKyJ,UACvBlI,EAAMiJ,oBAAoBxK,KAAKyK,UACtCzK,KAAK0J,KAAO1J,KAAK2J,GACVpI,EAAM2H,gBAAgB,qCAChB,IAAIzF,IAAWzD,KAAKyJ,UACtBzE,MAAQhF,KAAK0J,KACjBnI,EAAM2H,gBAAgB,8BAC1B,qCASP,IAJA,IAAIC,EAAY,GACZuB,EAAS,GACTC,EAAO,EACPhH,EAAa,IAAIF,IAAWzD,KAAKyJ,UAC5BnB,EAAItI,KAAK0J,KAAMpB,GAAKtI,KAAK2J,GAAIrB,IAAK,CACvC,IAAI1F,EAAQe,EAAWI,SAASuE,GAChC,GAAa,MAAT1F,EACA,MAEA+H,EAAO/H,EAAM+H,KAAO,QACpBxB,EAAUC,KAAK,IAAIwB,EAAe,CAACF,OAASA,MAC5CA,EAAS,IACFtB,KAAKxG,EAAM6D,UAClBkE,EAAO/H,EAAM+H,OAEbD,EAAOtB,KAAKxG,EAAM6D,UAClBkE,GAAQ/H,EAAM+H,MAKtB,OAFID,EAAO9K,OAAS,GAChBuJ,EAAUC,KAAK,IAAIwB,EAAe,CAACF,OAASA,KACzCvB,SAvDa9B,GA2DtBuD,cAKF,SAAAA,EAAYzC,GAAO,IAAA0C,EAAA,OAAA/K,OAAAyD,EAAA,EAAAzD,CAAAE,KAAA4K,IACfC,EAAA/K,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAA8K,GAAAnD,KAAAzH,QACK8K,aAAe,GAChB3C,GACAyC,EAAexC,aAAaC,QAAQ,SAAAhC,GAAI,OAAIwE,EAAKxE,GAAQ8B,EAAM9B,KAJpDwE,iFAHf,MAAO,CAAC,4DAWR,OAAO/E,KAAKa,UAAU3G,KAAKyG,2CAGtB,IAAAsE,EAAA/K,KACDgJ,EAAO,GAEX,OADA4B,EAAexC,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2C,EAAK3C,GAAQ0E,EAAK1E,KACvD2C,qCAIP,IAAK,IAAIV,KAAKtI,KAAK0K,OAAQ,CACvB,IAAIM,EAAYhL,KAAK0K,OAAOpC,GACxB1F,EAAQoB,IAAMgC,SAASgF,GAC3B,IAAgD,IAA5C9D,EAASC,OAAOoC,SAAS3G,EAAMC,SAC/B,OAAOtB,EAAMiJ,oBAAoB5H,EAAMC,WAC3C,IACIW,EADa,IAAIC,IAAWb,EAAMC,SACjBiC,cAAclC,GACnC,GAAW,MAAPY,EACA,OAAOjC,EAAM0J,qBAAqBzH,GACtCxD,KAAK8K,aAAa1B,KAAKxG,GAE3B,OAAO,qCAKP,IAAK,IAAI0F,KAAKtI,KAAK8K,aAAc,CAC7B,IAAIlI,EAAQ5C,KAAK8K,aAAaxC,GACb,IAAI7E,IAAWb,EAAMC,SAC3BkC,UAAUnC,GAEzB,MANgB,UAtCKyE,GAgDvB6D,cAYF,SAAAA,EAAY/C,EAAOR,EAAWjH,GAAS,IAAAyK,EAAA,OAAArL,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAkL,IACnCC,EAAArL,OAAAyH,EAAA,EAAAzH,CAAAE,KAAAF,OAAA0H,EAAA,EAAA1H,CAAAoL,GAAAzD,KAAAzH,QACKoL,YAAc,KACnBD,EAAKxD,UAAYA,EACjBwD,EAAKzK,QAAUA,EACXyH,GACA+C,EAAe9C,aAAaC,QAAQ,SAAAhC,GAAI,OAAI8E,EAAK9E,GAAQ8B,EAAM9B,KANhC8E,iFAVnC,MAAO,CAAC,wCAGEvI,GAEV,OAAO,IAAIsI,EAAe,CACtBtI,MAAUA,EAAM6D,6DAcpB,OAAOX,KAAKa,UAAU3G,KAAKyG,2CAGtB,IAAA4E,EAAArL,KACDgJ,EAAO,GAEX,OADAkC,EAAe9C,aAAaC,QAAQ,SAAAhC,GAAI,OAAI2C,EAAK3C,GAAQgF,EAAKhF,KACvD2C,qCAIP,IAAmC,IAA/BpB,EAAW5H,KAAK2H,WAChB,OAAOpG,EAAM+J,wBAAwBtL,KAAK2H,WAE9C,GADA3H,KAAKoL,YAAcpH,IAAMgC,SAAShG,KAAK4C,QACoB,IAAvDsE,EAASC,OAAOoC,SAASvJ,KAAKoL,YAAYvI,SAC1C,OAAOtB,EAAMiJ,oBAAoBxK,KAAKoL,YAAYvI,SACtD,IACIW,EADa,IAAIC,IAAWzD,KAAKoL,YAAYvI,SAC5BiC,cAAc9E,KAAKoL,aACxC,OAAW,MAAP5H,EACOjC,EAAM0J,qBAAqBzH,GAC/B,qCAIP,IACIE,EAAK1D,KAAKoL,YAAYvI,QAQ1B,OALgB,IAFC,IAAIY,IAAWC,GACRqB,UAAU/E,KAAKoL,eACkB,IAA/BxD,EAAW5H,KAAK2H,YAA+D,OAAtCG,EAAiByD,SAASxD,UACzFD,EAAiByD,SAASxD,QAAQ/H,MAClC4H,EAAW5H,KAAK2H,YAAa,EAC7BX,EAAawE,KAAK,YAAa9H,IAPnB,UA7CK2D,GC/LdoE,aApEX,SAAAA,EAAYtB,GAAMrK,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAyL,GACdzL,KAAKmK,IAAMA,EACXnK,KAAK0L,OAAS,yDAUVC,EAAeC,EAAaC,GAAkB,IAAAvE,EAAAtH,KAClD,IACIA,KAAK0L,OAAS,IAAII,UAAU9L,KAAKmK,KAErC,MAAM3G,GAEF,OADAoD,EAAI9C,KAAMN,IACH,EAIXxD,KAAK0L,OAAOK,OAAS,WACjB,IAAI5B,EAAM7C,EAAKoE,OAAOvB,IACtBvD,EAAI9C,KAAMqG,EAAM,kBAChB,IAAIrG,EAAOoE,EAAK8D,SACZnK,EAAU,IAAIyD,EAAQ,OAAQxB,EAAK2C,UACvCa,EAAKoE,OAAOO,KAAKpK,EAAQoB,UACzB2D,EAAI9C,KAAK,gBAAkBqG,GACvB0B,GACAA,EAAiBvE,IAGzBtH,KAAK0L,OAAOQ,QAAU,SAAC1I,GACnB,IAAI2G,EAAM7C,EAAKoE,OAAOvB,IACtBvD,EAAI9C,KAAK,yBAA2BqG,EAAM,MAAQrE,KAAKa,UAAUnD,KAErExD,KAAK0L,OAAOS,QAAU,WAClB,IAAIhC,EAAM7C,EAAKoE,OAAOvB,IACtBvD,EAAI9C,KAAMqG,EAAM,eACZyB,GACAA,EAAYtE,IAIpBtH,KAAK0L,OAAOU,UAAY,SAAAC,GACpB,IAAIlC,EAAM7C,EAAKoE,OAAOvB,IACtB,GAAKwB,EAAL,CAGA,IAAIW,EAAWX,EAAcU,EAAS7G,KAAM2E,GACxCmC,GAAYA,EAAS1M,OAAS,GAC9B0M,EAASjE,QAAQ,SAAAkE,GACbjF,EAAKoE,OAAOO,KAAKM,EAAItJ,8CAOjCjD,KAAK0L,OAAOc,MAAM,kCAGjBhH,GACDxF,KAAK0L,OAAOO,KAAKzG,qCA1DjB,QAAKxF,KAAK0L,QAGH1L,KAAK0L,OAAOe,aAAezM,KAAK0L,OAAOgB,cCqCvCC,yGAhDMvF,GAEb,OAAOrE,aAAaC,QADR,QACuB8C,KAAKa,UAAUS,uCAMlD,OAAc,MADDrE,aAAaI,QADd,SAGD,GACJ2C,KAAKC,MAAMhD,aAAaI,QAJnB,0CAODyJ,GACX,IAAIC,EAASF,EAAY5C,WACrB+C,EAAa3C,IAAIpE,MAAM6G,GACvBG,GAAO,EACX,IAAK,IAAIzE,KAAKuE,EAAO,CACjB,IAAItE,EAAS4B,IAAIpE,MAAM8G,EAAOvE,IAC1BC,EAAOyE,WAAaF,EAAWE,UAAYzE,EAAO0E,OAASH,EAAWG,OACtEF,GAAO,GAEXA,IACAF,EAAOzD,KAAKwD,GACZD,EAAYO,UAAUL,wCAIXM,GACf,IAAI/F,EAAQuF,EAAY5C,WAExBoD,EAAOC,IAAI,SAAAC,GAAC,OAAIA,EAAElD,MAAK9B,QAAQ,SAAA8B,GACxB/C,EAAMkG,QAAQnD,IAAQ,GACrB/C,EAAMmG,OAAOnG,EAAMkG,QAAQnD,GAAM,KAGzCwC,EAAYO,UAAU9F,qCAItBrE,aAAaC,QAAQ,WAAY,6CAIjC,OAA4C,OAArCD,aAAaI,QAAQ,qBCIrBuF,0GA5C0B,IAA7BiE,EAAYa,cACZ9E,EAAY2B,SAASnD,EAASE,OAElCuF,EAAYc,4CAGCrG,GACbuF,EAAYO,UAAU9F,sCAGC,IAAXpC,EAAWrF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACpB,OAAc,IAAVqF,EACO2H,EAAY5C,WAChB4C,EAAY5C,WAAWrI,MAAM,EAAGsD,2CAIvC,OAAO2H,EAAY5C,WAAWnK,wCAGlBwH,GACZ,IAAK,IAAIkB,KAAKlB,EAAM,CAEhB,IAAIrB,EAAQoE,IAAIpE,MAAMqB,EAAMkB,IAExB2E,EAA0B,QAAnBlH,EAAMmE,SAAoB,GAAI,IACtB,OAAfnE,EAAMkH,OACNA,EAAOlH,EAAMkH,MAEjB,IAAIS,EAAO,IACO,MAAd3H,EAAM2H,OACNA,EAAO3H,EAAM2H,MAEjB,IAAId,EAAO7G,EAAMmE,SAAW,KAAOnE,EAAMiH,SAAW,IAAMC,EAAOS,EAEjEf,EAAYgB,QAAQf,wCAITxF,GACfuF,EAAYiB,YAAYxG,YC1ChC,SAASyG,EAAehI,EAAYnF,GAChC,IAAImB,EAAUyD,EAAQrB,SAAS4B,GAC3BL,EAAO3D,EAAQ2D,KACfS,EAAW,KACf,GAAqB,SAAjBpE,EAAQ0D,KACRU,EAAW,IAAIiC,EAAK1C,QACnB,GAAqB,mBAAjB3D,EAAQ0D,KACbU,EAAW,IAAIuD,EAAchE,QAC5B,GAAqB,kBAAjB3D,EAAQ0D,KACbU,EAAW,IAAIoD,EAAa7D,QAC3B,GAAqB,oBAAjB3D,EAAQ0D,KACbU,EAAW,IAAI2E,EAAepF,QAC7B,GAAqB,mBAAjB3D,EAAQ0D,KACbU,EAAW,IAAI6D,EAActE,QAC5B,GAAqB,oBAAjB3D,EAAQ0D,KACbU,EAAW,IAAIiF,EAAe1F,EAAM3D,EAAQ6B,GAAIhD,OAC/C,IAAqB,UAAjBmB,EAAQ0D,KAGb,MAAO,CAACD,EAAQwI,UAAUvM,EAAMwM,oBAAoB,oCAFpD9H,EAAW,IAAI1E,EAAMiE,GAKzBoB,EAAI9C,KAAK,2BAA6BjC,EAAQ0D,MAE9C,IAAI/B,EAAMyC,EAAS+H,WACnB,OAAY,OAARxK,GACAoD,EAAI9C,KAAK,4BAA8BN,EAAIF,MACpC,CAACgC,EAAQwI,UAAUtK,KAGvByC,EAASgI,QAAQC,OAAO,SAACrB,EAAQsB,GACpC,IAAI5B,EAAMjH,EAAQ8I,aAAaD,GAG/B,OAFAtB,EAAOzD,KAAKmD,GACZ3F,EAAI9C,KAAK,qCAAuCyI,EAAIhH,MAC7CsH,GACR,QCgBQwB,aA5BX,SAAAA,IAAc,IAAA/G,EAAAtH,KAAAF,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAqO,GAAArO,KAvBd4L,YAAc,SAACgB,GACX,IAAK,IAAItE,KAAKhB,EAAKF,MACf,GAAIE,EAAKF,MAAMkB,KAAOsE,EAElB,YADAtF,EAAKF,MAAMmG,OAAOjF,EAAG,IAoBnBtI,KAfd6L,iBAAmB,SAACe,GAChBtF,EAAKF,MAAMgC,KAAKwD,IAcN5M,KAXdsO,gBAAkB,SAACC,GACfjH,EAAKkH,eAAeD,EAAUnD,YAAamD,EAAU7N,QAAS6N,EAAU5G,YAWxE3H,KAAKoH,MAAQ,GACbpH,KAAKqK,SAAS3B,EAAYqB,YAC1BjC,EAAiByD,SAASxD,QAAU/H,KAAKsO,qEAVpCG,GACL,IAAK,IAAInG,KAAKmG,EAAM,CACL,IAAIhD,EAAKgD,EAAKnG,IACpBoG,QAAQb,EAAgB7N,KAAK4L,YAAa5L,KAAK6L,2EAU7CjJ,EAAO+L,EAAqBhH,GACvC,IAAK,IAAIW,KAAKtI,KAAKoH,MACf,GAAIpH,KAAKoH,MAAMkB,GAAG6B,MAAQwE,EACtB,IACI,IAAInJ,EAAO0F,EAAec,OAAOpJ,GAAO6D,SACpC5E,EAAU,IAAIyD,EAAQ,kBAAmBE,EAAMmC,GACnD3H,KAAKoH,MAAMkB,GAAG2D,KAAKpK,EAAQoB,UAE/B,MAAOO,GACHoD,EAAI9C,KAAK,oCAAsC9D,KAAKoH,MAAMkB,GAAG6B,IAAM,WAAa3G,iDAM5F,IAAIiL,EAAO,GACX,IAAK,IAAInG,KAAKtI,KAAKoH,MACfqH,EAAKrF,KAAKpJ,KAAKoH,MAAMkB,GAAG6B,KAC5B,OAAOsE,wFCrBTG,6MACFC,MAAQ,CACJC,SAAU,KACVC,UAAW,KACX5E,IAAK,QAGT6E,oBAAsB,WAClB1H,EAAK2H,SAAS,CACVF,WAAW,EACXD,UAAU,OAIlBI,cAAgB,WAGZxG,EAAY2B,SAAS,CAAC/C,EAAKuH,MAAM1E,MACjC7C,EAAK6H,mBAELnI,EAAawE,KAAK,iBAGtB4D,YAAc,SAAAC,GACV/H,EAAK2H,SAAS,CAAEH,UAAU,OAG9BlD,YAAc,WACVtE,EAAK2H,SAAS,CAAEH,SAAU,UAG9BK,iBAAmB,WACf7H,EAAK2H,SAAS,CAAEF,UAAW,UAG/BO,aAAe,kBAAM,SAAAD,GACjB/H,EAAK2H,SAAS,CACV9E,IAAKkF,EAAME,OAAOtH,kFAIjB,IACGuH,EAAYxP,KAAKmI,MAAjBqH,QADHC,EAE2BzP,KAAK6O,MAA7BC,EAFHW,EAEGX,SAAUC,EAFbU,EAEaV,UAEdW,EACAC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAOG,KAAMC,QAAQjB,GAAYkB,QAASjQ,KAAKmP,kBAC3CQ,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQW,OACpBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWC,UAAQ,EAAC3M,GAAG,oBAAoB4M,MAAM,WAAWC,aAAa,mBACrEL,UAAWV,EAAQgB,UAAWC,OAAO,SAASC,SAAU1Q,KAAKsP,iBACjEK,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQO,QAAQ,YAAYC,MAAM,UAAUC,QAAS7Q,KAAKkP,eAA1D,UAKjB,OACIS,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQU,SAAS,SAASZ,UAAWV,EAAQuB,QACzCpB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAM1M,GAAG,UAAUqM,KAAMC,QAAQlB,GAAWmB,QAASjQ,KAAK4L,aACtD+D,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUS,QAAS7Q,KAAKgP,qBAAxB,aAEJW,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAYqB,aAAW,OAAOJ,QAAS7Q,KAAKoP,aACxCO,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,OAEJD,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,KAAKC,MAAM,WAA/B,0BAIHlB,UApEIyB,aA0ENC,uBA/FA,SAAAC,GAAK,MAAK,CACrBN,OAAOjR,OAAAwR,EAAA,EAAAxR,CAAA,GACAuR,EAAME,OAAOC,QADd,CAEFC,KAAM,WACNC,MAAO,SAEXvB,MAAO,CACHW,SAAU,WACVY,MAA4B,GAArBL,EAAMM,QAAQC,KACrBC,gBAAiBR,EAAMS,QAAQC,WAAW5B,MAC1C6B,UAAWX,EAAMY,QAAQ,GACzBC,QAA8B,EAArBb,EAAMM,QAAQC,KACvBO,QAAS,QAEb3B,UAAW,CACP4B,WAAYf,EAAMM,QAAQC,KAC1BS,YAAahB,EAAMM,QAAQC,KAC3BF,MAAO,OA8EAN,CAAmBxC,GChDnB0D,qNAhDXzD,MAAQ,CACJ0D,eAAgB,KAGpBC,aAAe,SAAC5F,GACZtF,EAAK2H,SAAS,CACVsD,eAAgB,IAGpBvL,EAAawE,KAAK,eAAgBoB,4EAG7B,IAAA7D,EAAA/I,KACGuS,EAAkBvS,KAAK6O,MAAvB0D,cADHE,EAEuBzS,KAAKmI,MAAzBf,EAFHqL,EAEGrL,MAAOsL,EAFVD,EAEUC,SACf,OACI/C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMuC,MAAI,EAACzC,UAAU,UACjBP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,QAAQT,UAAU,SAAtC,aACAP,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACKhJ,EAAMgG,IAAI,SAACR,EAAM9J,GAAP,OACP6M,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIwC,QAAM,EACNC,SAAUN,IAAkBzP,EAC5BlC,IAAKkC,EACL+N,QAAS,WACL9H,EAAKkG,SAAS,CAACsD,cAAezP,IAC9B4P,EAAS9F,EAAT8F,KAGJ/C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAc0C,QAASlG,EAAKzC,IAAK4I,uBAAwB,CAAC7C,UAAW,aACrEP,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAYqB,aAAW,WAAWJ,QAAS9H,EAAKyJ,aAAaQ,KAAKjK,EAAM6D,IAAxE,kBAhCPuE,cCqCV8B,6MAvCXpE,MAAQ,CACJ0D,eAAgB,2EAGX,IAAAxJ,EAAA/I,KACGuS,EAAkBvS,KAAK6O,MAAvB0D,cADHE,EAEwBzS,KAAKmI,MAA1BhB,EAFHsL,EAEGtL,OAAQuL,EAFXD,EAEWC,SAChB,OACI/C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMuC,MAAI,EAACzC,UAAU,UACjBP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,QAAQT,UAAU,SAAtC,cACAP,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACKtQ,OAAOwJ,KAAKnC,GAAQiG,IAAI,SAACxM,EAAKkC,GAAN,OACrB6M,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIwC,QAAM,EACNC,SAAUN,IAAkBzP,EAC5BlC,IAAKkC,EACL+N,QAAS,WACL9H,EAAKkG,SAAS,CAACsD,cAAezP,IAC9B4P,EAAS9R,EAAT8R,KAGJ/C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACI0C,QAASlS,EACTmS,uBAAwB,CAAC7C,UAAW,WACpCgD,UAAW,gBAAkB/L,EAAOvG,iBAzB1CuQ,aCoCXgC,8MAlCXtE,MAAQ,CACJ0D,eAAgB,2EAGX,IAAAxJ,EAAA/I,KACGuS,EAAkBvS,KAAK6O,MAAvB0D,cADHE,EAEwBzS,KAAKmI,MAA1BuK,EAFHD,EAEGC,SAAUhI,EAFb+H,EAEa/H,OAClB,OACIiF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMuC,MAAI,EAACzC,UAAU,UACjBP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,QAAQT,UAAU,SAAtC,cACAP,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACK1F,EAAO0C,IAAI,SAAAtK,GAAK,OACb6M,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIwC,QAAM,EACNC,SAAUN,IAAkBzP,EAC5BlC,IAAKkC,EACL+N,QAAS,WACL9H,EAAKkG,SAAS,CAACsD,cAAezP,IAC9B4P,EAAS5P,EAAT4P,KAEJ/C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAc0C,QAAShQ,EAAOiQ,uBAAwB,CAAC7C,UAAW,yBArBpEiB,aCqB1B,IAiBMiC,oLACO,IAAAX,EACsBzS,KAAKmI,MAAxBvF,EADH6P,EACG7P,MAAO4M,EADViD,EACUjD,QACf,IAAK5M,EACD,OAAO+M,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMuC,MAAI,IAGrB,IA/CiBU,EA+CbC,EAAO,IAAIC,KAAkB,IAAb3Q,EAAM4Q,MAEtBtP,EAAU,GACVuP,GAAS,EACb,IACIvP,EAAU4B,KAAKC,MAAM2N,KAAK9Q,EAAMsB,UAnDrB,iBADEmP,EAqDanP,KAnD9BmP,EAAOvN,KAAKa,UAAU0M,OAAMxT,EAAW,IAmDnCqE,GAjDRmP,EAAOA,EAAK9M,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,SAE3DA,QAAQ,yGAA0G,SAAUoN,GACpI,IAAIC,EAAM,SAYV,MAXI,KAAKC,KAAKF,GAENC,EADA,KAAKC,KAAKF,GACJ,MAEA,SAEH,aAAaE,KAAKF,GACzBC,EAAM,UACC,OAAOC,KAAKF,KACnBC,EAAM,QAEH,gBAAkBA,EAAM,KAAOD,EAAQ,YAmC1CF,GAAS,EACX,MAAOK,GACDlR,EAAMsB,QAAQtE,OAAS,MACvBsE,EAAUwP,KAAK9Q,EAAMsB,SAASxC,MAAM,EAAG,KAAO,SAAWkB,EAAMsB,QAAQtE,OAAS,KAAQ,kBAKhG,OACI+P,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMuC,MAAI,EAACzC,UAAWV,EAAQuE,SAC1BpE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,SAApB,gBACAhB,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQwE,QACxBrE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAApB,QACAhB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAAYT,UAAWV,EAAQvH,OAAQqL,EAAKW,qBAAuB,IAAMX,EAAKY,sBAClGvE,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQwE,QACxBrE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAApB,cACAhB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAAYT,UAAWV,EAAQvH,OAAQrF,EAAMP,MACjEsN,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQwE,QACxBrE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAApB,iBACAhB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAAYT,UAAWV,EAAQvH,OAAmC,IAA3BrF,EAAMuR,UAAUvU,OAAe,IAAMgD,EAAMuR,WACtGxE,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQwE,QACxBrE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAApB,aACAhB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAAYT,UAAWV,EAAQvH,OAAQrF,EAAM5B,WACjE2O,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQwE,QAExBrE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYO,QAAQ,YAApB,YAAyC/N,EAAMsB,QAAQtE,OAAvD,WAEQ6T,EAEI9D,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIgE,UAAU,MACVlE,UAAWV,EAAQvH,MACnBoM,MAAO,CAACzD,MAAO,WACf0D,wBAAyB,CAACC,OAAQrQ,KAKtCyL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIgE,UAAU,MACVlE,UAAWV,EAAQvH,MACnBoM,MAAO,CAACzD,MAAO,YACjB1M,WA5DHiN,aA2EZC,wBA5FA,SAAAC,GAAK,MAAK,CACrB0C,QAAS,CACLrC,MAAO,EACPD,KAAM,WACNvO,OAAQ,OACRsR,UAAW,aACXtC,QAA8B,EAArBb,EAAMM,QAAQC,KACvB6C,SAAU,UAEdxM,MAAO,CACHyM,WAAY,eAEhBV,MAAO,CACH9Q,OAA6B,EAArBmO,EAAMM,QAAQC,QA+EfR,CAAmBgC,ICzG5BuB,8MACF9F,MAAQ,CACJzH,MAAO,GACPwN,aAAc,KACdC,cAAe,KACfC,UAAW,GACXC,UAAW,GACXnS,MAAO,QAYXoS,oBAAsB,SAACtR,GACnB,IAAK4D,EAAKuH,MAAM+F,aAAc,OAAO,EAGrC,IAAIK,EAAenV,OAAOoV,OAAO,GAAI5N,EAAKuH,MAAMiG,WAShD,GARAhV,OAAOwJ,KAAKhC,EAAKuH,MAAMiG,WAClBK,OAAO,SAAAC,GAAO,OAAIA,IAAY1R,IAC9B2E,QAAQ,SAAA+M,GACLH,EAAaG,IAAY,IAEjC9N,EAAK2H,SAAS,CAAC6F,UAAWG,IAGtB3N,EAAKuH,MAAMgG,gBAAkBnR,EAAI,CACjC,IAAI2R,EAAgB/N,EAAKuH,MAAMkG,UAAUrT,MAAM,GAC/C2T,EAAcC,QAAQD,EAAczV,QACpC0H,EAAK2H,SAAS,CACV8F,UAAWM,QAKvBE,gBAAkB,WACd,IAAInO,EAAQsB,EAAYqB,WAAWqD,IAAI,SAAAjD,GAAG,OAAI,IAAIsB,EAAKtB,KACvD7C,EAAK2H,SAAS,CAAC7H,MAAOA,OAG1BoO,kBAAoB,SAAC5I,GACjBlE,EAAYkF,YAAY,CAAChB,IACzB,IAAIxF,EAAQE,EAAKuH,MAAMzH,MACvBA,EAAMmG,OAAOnG,EAAMkG,QAAQV,EAAKzC,KAAM,GAEtC7C,EAAK2H,SAAS,CACV7H,MAAOA,EACPwN,aAAc,KACdC,cAAe,KACfC,UAAW,GACXC,UAAW,GACXnS,MAAO,UAKf6S,iBAAmB,SAAA7I,GAAI,OAAI,WAAM,IACrBgI,EAAiBtN,EAAKuH,MAAtB+F,aACJhI,IAASgI,IACLA,GACAA,EAAapI,QAEbI,EAAK8I,WACL9I,EAAKJ,QAETlF,EAAK2H,SAAS,CAAC2F,aAAchI,IAC7BA,EAAK8B,QAAQ,SAAAlJ,GACT,IAAI+G,EAAMjH,EAAQrB,SAASuB,GAC3B,GAAiB,SAAb+G,EAAIhH,KACJ+B,EAAK2H,SAAS,CAAC6F,UAAWvI,EAAI/G,KAAJ,cAEzB,GAAiB,oBAAb+G,EAAIhH,KAA4B,CACrC,IAAImF,EAAS6B,EAAI/G,KAAJ,OACTkF,EAAO9K,OAAS,GAChB0H,EAAK2H,SAAS,CAACrM,MAAO8H,EAAO,aAOjDiL,kBAAoB,SAAA/U,GAAG,OAAI,WAEvB,IADA,IAAIgV,EAAU,GACLtN,EAAIhB,EAAKuH,MAAMiG,UAAUlU,GAAO,EAAG0H,GAAK,EAAGA,IAChDsN,EAAQxM,KAAKd,GAEjBhB,EAAK2H,SAAS,CAAC4F,cAAejU,EAAKmU,UAAWa,QAGlDC,kBAAoB,SAAA/S,GAAK,OAAI,WAAM,IAAA2M,EACSnI,EAAKuH,MAArC+F,EADuBnF,EACvBmF,aAAcC,EADSpF,EACToF,cACtBD,EAAa3I,KAAKnG,KAAKa,UAAU,CAC7BjD,GAAI4B,EAAQG,aACZF,KAAM,iBACNC,KAAM,CACFiE,SAAUoL,EACVnL,KAAM5G,EACN6G,GAAI7G,2FA5FZkE,EAAa8O,GAAG,YAAa9V,KAAKgV,oBAAoBhC,KAAKhT,OAC3DgH,EAAa8O,GAAG,eAAgB9V,KAAKwV,kBAAkBxC,KAAKhT,OAC5DgH,EAAa8O,GAAG,aAAc9V,KAAKuV,gBAAgBvC,KAAKhT,OAExD,IAAIoH,EAAQsB,EAAYqB,WAAWqD,IAAI,SAAAjD,GAAG,OAAI,IAAIsB,EAAKtB,KACvDnK,KAAKiP,SAAS,CAAC7H,MAAOA,qCA4FjB,IACGoI,EAAYxP,KAAKmI,MAAjBqH,QADHuG,EAE0C/V,KAAK6O,MAA5CzH,EAFH2O,EAEG3O,MAAO0N,EAFViB,EAEUjB,UAAWC,EAFrBgB,EAEqBhB,UAAWnS,EAFhCmT,EAEgCnT,MACrC,OACI+M,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAM4F,WAAS,EAAC9F,UAAWV,EAAQyG,KAAMC,UAAU,OAC/CvG,EAAAC,EAAAC,cAACsG,EAAD,CAAY/O,MAAOA,EAAOsL,SAAU1S,KAAKyV,mBACzC9F,EAAAC,EAAAC,cAACuG,EAAD,CAAajP,OAAQ2N,EAAWpC,SAAU1S,KAAK2V,oBAC/ChG,EAAAC,EAAAC,cAACwG,GAAD,CAAa3L,OAAQqK,EAAWrC,SAAU1S,KAAK6V,oBAC/ClG,EAAAC,EAAAC,cAACyG,GAAD,CAAc1T,MAAOA,YApHfuO,aA0HPC,wBAhID,SAAAC,GAAK,MAAK,CACpB4E,KAAM,CACFxE,KAAM,cA8HCL,CAAkBuD,ICtH3B4B,gMAGEvW,KAAKwW,QAAU,IAAInI,mCAGd,IACGmB,EAAYxP,KAAKmI,MAAjBqH,QAER,OACIG,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQwG,WACpBrG,EAAAC,EAAAC,cAAC4G,EAAD,MACA9G,EAAAC,EAAAC,cAAC6G,GAAD,cAZEvF,aAkBHC,wBA9BH,SAAAC,GAAK,MAAK,CAClB2E,UAAW,CACPlF,SAAU,QACV6F,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,QAAS,OACTC,cAAe,YAsBR5F,CAAkBmF,ICxBbvG,QACW,cAA7BiH,OAAOC,SAASlK,UAEe,UAA7BiK,OAAOC,SAASlK,UAEhBiK,OAAOC,SAASlK,SAAS2G,MACvB,2DCXNwD,IAASC,OAAOzH,EAAAC,EAAAC,cAACwH,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,eCrHnBnP,EAAY+E,qHCTNzJ,aAkBF,SAAAA,IAAelE,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,GACXhE,KAAKoE,UAAY,GACjBpE,KAAKmE,SAAW,GAChBnE,KAAKwT,KAAO,EACZxT,KAAKgB,UAAY,GACjBhB,KAAKkD,OAAS,EACdlD,KAAKkE,QAAU,6DAvBH2B,GACZ,IAAIL,EAAOM,KAAKC,MAAMF,GAEtB,OADY7B,EAAMgC,SAASR,oCAIfA,GACZ,IAAI5C,EAAQ,IAAIoB,EAOhB,OANApB,EAAMwB,UAAYoB,EAAI,KACtB5C,EAAMuB,SAAWqB,EAAI,UACrB5C,EAAM4Q,KAAOhO,EAAI,KACjB5C,EAAM5B,UAAYwE,EAAI,UACtB5C,EAAMM,OAASsC,EAAI,OACnB5C,EAAMsB,QAAUsB,EAAI,QACb5C,oDAyBP,MARW,CACPP,KAAQrC,KAAKoE,UACboP,KAAQxT,KAAKwT,KACbxS,UAAahB,KAAKgB,UAClBkC,OAAUlD,KAAKkD,OACfgB,QAAWlE,KAAKkE,QAChBiQ,UAAanU,KAAKmE,4CA2BtB,OAAwB,IAAhBnE,KAAKkD,QAAkC,MAAjBlD,KAAKmE,UAAoBnE,KAAKmE,SAASvE,OAAS,IAC9EkB,IAAKa,OAAOK,IAAW,UAAUC,OAAOjC,KAAKuE,gBAAgBrC,YAAclC,KAAKoE,2CAIhF,OAAO0B,KAAKa,UAAU3G,KAAKyG,4CA1C3B,OAAuB,IAAhBzG,KAAKkD,8CAgBZ,IAAIsC,EAAOxF,KAAKyG,SAEZoG,EAASrH,EAAI,OAAW5D,WAAa4D,EAAI,KAAS5D,WAClDN,EAAS,IAAIH,EAAO0L,GACpBrH,EAAI,OAAa,IACjBlE,EAASH,EAAOC,OAAO,CAACE,EAAQR,IAAKC,OAAOyE,EAAI,cAEpD,IAAItB,EAAU/C,EAAOuI,KAAKlE,EAAI,QAAa,UAC3C,OAAOrE,EAAOC,OAAO,CAACE,EAAQ4C,oCAI9B,OAAOzE,IAAIqY,eAAe9X,KAAKgB,UAAWhB,KAAKuE,yBAmBxCP","file":"static/js/main.9a2d4ebd.chunk.js","sourcesContent":["import bitcoin from 'bitcoinjs-lib'\nimport bs58 from 'bs58'\nimport secp256k1 from 'secp256k1'\nimport createHash from 'create-hash'\n\nclass Key {\n    keyPair = null\n\n    static fromWIF(wif) {\n        var key = new Key(false)\n        key.keyPair = bitcoin.ECPair.fromWIF(wif)\n        return key\n    }\n\n    static getAddress(publicKey) {\n        const { address } = bitcoin.payments.p2pkh({ pubkey: bs58.decode(publicKey) })\n        return address\n    }\n\n    static encodeSignature(signature, recovery, compressed) {\n        if (compressed) recovery += 4\n        return Buffer.concat([Buffer.alloc(1, recovery + 27), signature])\n    }\n\n    static decodeSignature(buffer) {\n        if (buffer.length !== 65) throw new Error('Invalid signature length')\n\n        var flagByte = buffer.readUInt8(0) - 27\n        if (flagByte > 7) throw new Error('Invalid signature parameter')\n\n        return {\n            compressed: !!(flagByte & 4),\n            recovery: flagByte & 3,\n            signature: buffer.slice(1)\n        }\n    }\n\n    toWIF() {\n        return this.keyPair.toWIF()\n    }\n\n    toAddress() {\n        const { address } = bitcoin.payments.p2pkh({ pubkey: this.keyPair.publicKey })\n        return address\n    }\n\n    constructor(gen = true) {\n        if (gen) {\n            this.keyPair = bitcoin.ECPair.makeRandom()\n        }\n    }\n\n    publicKey() {\n        return bs58.encode(this.keyPair.publicKey).toString()\n    }\n\n    sign(message) {\n        var signature = secp256k1.sign(createHash('sha256').update(message).digest(), this.keyPair.privateKey)\n        return bs58.encode(Key.encodeSignature(signature.signature, signature.recovery, true)).toString()\n    }\n\n    static recoverAddress(signature,message)\n    {\n        let hash = createHash('sha256').update(message).digest()\n        if (!Buffer.isBuffer(signature)) signature = bs58.decode(signature)\n        let sig = Key.decodeSignature(signature)\n        let publicKey = bs58.encode(secp256k1.recover(hash, sig.signature, sig.recovery, true)).toString()\n        let address= Key.getAddress(publicKey)\n        return address\n    }\n}\n\nexport default Key\n","class Storage {\n    static saveBlock(block, chainID) {\n        let index = chainID + '+' + block['height'].toString()\n        return localStorage.setItem(index, block.toJSON())\n    }\n\n    static getBlock(height, chainID) {\n        let index = chainID + '+' + height.toString()\n        return localStorage.getItem(index)\n    }\n\n    static getChainCount(chainID) {\n        let index = chainID\n        if (localStorage.getItem(index) == null)\n            return 0\n        return parseInt(localStorage.getItem(index))\n    }\n\n    static updateChainCount(chainID, height) {\n        let index = chainID\n        return localStorage.setItem(index, height.toString())\n    }\n}\n\nexport default Storage","class Error {\n    constructor(code, desc) {\n        this.code = code\n        this.desc = desc\n    }\n\n    static BlockValidationError(err) {\n        return new Error('BlockValidationError', err)\n    }\n\n    static InvalidBlockError(err) {\n        return new Error('InvalidBlockError', err)\n    }\n\n    static ForkError(err) {\n        return new Error('ForkError', err)\n    }\n\n    static ExistBlockError(err) {\n        return new Error('ExistBlockError', err)\n    }\n\n    static MismatchedIDError(err) {\n        return new Error('MismatchedIDError', err)\n    }\n}\n\nexport default Error","//import Key from './key'\nimport Block from './block'\nimport {crypto} from 'bitcoinjs-lib'\nimport bs58 from 'bs58'\nimport Storage from './storage'\nimport Error from './errors'\n\nclass Blockchain {\n\n    static fromPrivateKey(key) {\n        let blockchain = new Blockchain(key.toAddress())\n        blockchain.key = key\n        return blockchain\n    }\n\n    constructor(id) {\n        this.key = null\n        this.id = id\n    }\n\n    get count() {\n        return Storage.getChainCount(this.id)\n    }\n\n    get isEmpty() {\n        return (Storage.getChainCount(this.id) === 0)\n    }\n\n    updateChainCount(height) {\n        Storage.updateChainCount(this.id, height)\n    }\n\n    getBlock(height) {\n        // height: int;\n        let info = Storage.getBlock(height, this.id)\n        if (info == null)\n            return null\n\n        return Block.fromJSON(info)\n    }\n\n    createBlock(payload, height) {\n        let block = new Block()\n        block.payload = payload\n        block.height = height\n        block.prevHash = ''\n        //block.time  To be done\n        if (block.height > 0) {\n            block.prevHash = this.getBlock(block.height - 1).blockHash\n        }\n        block.blockHash = bs58.encode(crypto.sha256(block.dataForHashing, 'utf8'))\n        block.signature = this.key.sign(block.dataForHashing)\n        return block\n    }\n\n    validateBlock(block) {\n        if (block.isValid() === false)\n            return Error.InvalidBlockError(\"block hash or signature is invalid\")\n        if (block.chainID !== this.id)\n            return Error.MismatchedIDError(\"the block id mismatch chain id\")\n        let exitsBlock = this.getBlock(block.height)\n        if (exitsBlock != null){\n            if ((exitsBlock.prevHash !== block.prevHash) || (exitsBlock.blockHash !== block.blockHash))\n                return Error.ForkError(\"the blockchain is forked\")\n            return Error.ExistBlockError(\"block already exist\")\n        }\n        return null\n    }\n\n    saveBlock(block) {\n        if (this.validateBlock(block) == null) {\n            Storage.saveBlock(block, this.id)\n            if (this.count === null)\n                this.updateChainCount(block.height)\n            else if (block.height + 1 > this.count)\n                this.updateChainCount(block.height + 1)\n            return true\n        }\n        return false\n    }\n}\n\nexport default Blockchain","export { default as Key } from './key'\nexport { default as Block} from './block'\nexport { default as Blockchain} from './blockchain'\nexport { default as Storage} from './storage'","class Message {\n    static generateID() {\n        return Math.random().toString(36).substr(2)\n    }\n\n    static fromJSON(jsonString) {\n        var data = JSON.parse(jsonString)\n        var message = Message.fromDict(data)\n        return message\n    }\n\n    static fromDict(data) {\n        var message = new Message()\n        message.type = data['type']\n        message.data = data['data']\n        message.id = data['id']\n        return message\n    }\n\n    static fromBehavior(behavior) {\n        let firstCap = new RegExp('(.)([A-Z][a-z]+)')\n        let allCap = new RegExp('([a-z0-9][A-Z])')\n\n        var name = behavior.constructor.name\n        name = name.replace(firstCap, '$1:$2')\n        name = name.replace(allCap, '$1:$2')\n\n        return new Message(name.toLowerCase(), behavior.toDict())\n    }\n\n    static fromError(error) {\n        return new Message('error', error.toDict())\n    }\n\n    constructor(type = null, data = null, id = null) {\n        this.type = type\n        this.data = data\n        if (id === null)\n            this.id = Message.generateID()\n        else\n            this.id = id\n    }\n\n    toDict() {\n        let data = {\n            'type': this.type,\n            'data': this.data,\n            'id': this.id,\n        }\n        return data\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n}\n\nexport default Message","import Prefix from 'loglevel-message-prefix'\nimport Level from 'loglevel'\n\nexport const log = Prefix(Level)\nlog.setLevel('TRACE')","import { EventEmitter } from 'events'\n\nexport let eventEmitter = new EventEmitter()","const SETTINGS = {\n    chains: [\n        \"123XZfk9FWKyQoBCgBEiwDA4q1o9RdUSyB\", \n        \"1rmj3NjgDbCqRG7P2Be73xxwXzaW63ycm\"\n    ],\n    peers: [\n        \"ws://hk.infnote.com:32767\"\n    ]\n}\n\nexport default SETTINGS\n","class Behavior {\n    react() { }\n    validate() { }\n}\n\nexport default Behavior ","import Behavior from './behavior'\n\nclass Error extends Behavior {\n    constructor(code, desc) {\n        super()\n        this.code = code\n        this.desc = desc\n    }\n\n    toDict() {\n        let data = {\n            'code': this.code,\n            'desc': this.desc,\n        }\n        return data\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    static invalidMessageError(err) {\n        return new Error('InvalidMessage', err)\n    }\n\n    static invalidBehaviorError(err) {\n        return new Error('InvalidBehaviorError', err)\n    }\n    \n    static incompatibleProtocolVersion(err) {\n        return new Error('IncompatibleProtocolVersionError', err)\n    }\n    \n    static badRequestError(err) {\n        return new Error('BadRequestError', err)\n    }\n    \n    static JSONDecodeError(err) {\n        return new Error('JSONDecodeError', err)\n    }\n    \n    static chainNotAcceptError(err) {\n        return new Error('ChainNotAcceptError', err)\n    }\n    \n    static blockValidationError(validateErr) {\n        return new Error(validateErr.code, validateErr.desc)\n    }\n    \n    static URLError(err) {\n        return new Error('URLError', err)\n    }\n\n    static DuplicateBroadcastError(messageID){\n        return new Error('DuplicateBroadcastError', messageID + 'has already existed')\n    }\n\n    validate(){\n        return null\n    }\n\n    react(){\n        var behaviors = []\n        return behaviors\n    }\n}\n\nexport default Error","import {eventEmitter, SETTINGS} from 'utils'\nimport {Blockchain, Block} from '../blockchain'\nimport { PeerManager } from 'network'\nimport Behavior from './behavior'\nimport Error from './errors'\nimport url from 'url'\nimport UAParser from 'ua-parser-js'\n\nvar messageIDs = {}\n\nvar bsInstance = null\nexport class BroadcastService {\n    handler = null\n\n    static shared() {\n        if (bsInstance === null) {\n            bsInstance = new BroadcastService()\n        }\n        return bsInstance\n    }\n}\n\nclass Info extends Behavior {\n    static getMembers(){\n        return ['version', 'peers', 'chains', 'platform', 'full_node']\n    }\n\n    static create() {\n        var chains = {}\n        for (var i in SETTINGS.chains){\n            let blockchain = new Blockchain(SETTINGS.chains[i])\n            chains[blockchain.id] = blockchain.count\n        }\n        var parser = new UAParser()\n        return new Info({\n            'version' : '1.1',\n            'peers' : PeerManager.getPeersCount(),\n            'chains' : chains,\n            'platform' : parser.getBrowser(),\n            'full_node' : false\n        })\n    }\n\n    constructor(props) {\n        super()\n        if (props)\n            Info.getMembers().forEach(name => this[name] = props[name])\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    toDict() {\n        var dict = {}\n        Info.getMembers().forEach(name => dict[name] = this[name])\n        return dict       \n    }\n\n    validate() {\n        if (this.version !== '1.1')\n            return Error.incompatibleProtocolVersion('only accept v1.1 protocol')\n        if (this.peers < 0)\n            return Error.badRequestError('\"peers\" needs to be a non-negative number')\n        return null\n    }\n\n    react() {\n        var behaviors = []\n        if (this.peers > 0)\n            behaviors.push(new RequestPeers({'count':this.peers}))\n        for (var i in Object.keys(this.chains)) {\n            let key = Object.keys(this.chains)[i]\n            let value = this.chains[key]\n            if (SETTINGS.chains.includes(key) === false)\n                continue\n            let blockchain = new Blockchain(key)\n            if (blockchain.count >= value)\n                continue\n            behaviors.push(new RequestBlocks({'chain_id':key, 'from':blockchain.count, 'to':value - 1}))\n        }\n        return behaviors\n    }\n}\n\nclass RequestPeers extends Behavior {\n    static getMembers(){\n        return ['count']\n    }\n\n    constructor(props) {\n        super()\n        if (props)\n            RequestPeers.getMembers().forEach(name => this[name] = props[name])\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    toDict() {\n        var dict = {}\n        RequestPeers.getMembers().forEach(name => dict[name] = this[name])\n        return dict       \n    }\n\n    validate() {\n        if (this.count <= 0)\n            return Error.badRequestError('\"count\" needs to be a non-negative number')\n        return null\n    }\n\n    react() {\n        var behaviors = []\n        // TODO: maintain peers\n        behaviors.push(new ResponsePeers({'peers': PeerManager.getPeers(this.count)}))\n        return behaviors\n    }\n}\n\nclass ResponsePeers extends Behavior {\n    static getMembers(){\n        return ['peers']\n    }\n\n    constructor(props) {\n        super()\n        if (props)\n            ResponsePeers.getMembers().forEach(name => this[name] = props[name])\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    toDict() {\n        var dict = {}\n        ResponsePeers.getMembers().forEach(name => dict[name] = this[name])\n        return dict       \n    }\n\n    validate() {\n        for (var key in this.peers) {\n            let protocol = url.parse(this.peers[key]).protocol\n            if ((protocol !== 'wss:') && (protocol !== 'ws:'))\n                return Error.URLError('not a websocket URL')\n        }\n        return null\n    }\n\n    react() {\n        var behaviors = []\n        PeerManager.addPeers(this.peers)\n        return behaviors\n    }\n}\n\nclass RequestBlocks extends Behavior {\n    static getMembers(){\n        return ['chain_id','from','to']\n    }\n\n    constructor(props) {\n        super()\n        if (props)\n            RequestBlocks.getMembers().forEach(name => this[name] = props[name])\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    toDict() {\n        var dict = {}\n        RequestBlocks.getMembers().forEach(name => dict[name] = this[name])\n        return dict       \n    }\n\n    validate() {\n        if (SETTINGS.chains.includes(this.chain_id) === false)\n            return Error.chainNotAcceptError(this.Chain_id)\n        if (this.from > this.to)\n            return Error.badRequestError('\"from\" must greater or equal \"to\"')\n        let blockchain = new Blockchain(this.chain_id)\n        if (blockchain.count < this.from)\n            return Error.badRequestError('request not existed blocks')\n        return null\n    }\n\n    // Split blocks for every 100KB\n    react() {\n        var behaviors = []\n        var blocks = []\n        var size = 0\n        let blockchain = new Blockchain(this.chain_id)\n        for (var i = this.from; i <= this.to; i++) {\n            let block = blockchain.getBlock(i)\n            if (block == null)\n                break\n\n            if (size + block.size > 1024 * 100) {\n                behaviors.push(new ResponseBlocks({'blocks':blocks}))\n                blocks = []\n                blocks.push(block.toDict())\n                size = block.size\n            } else {\n                blocks.push(block.toDict())\n                size += block.size\n            }\n        }\n        if (blocks.length > 0)\n            behaviors.push(new ResponseBlocks({'blocks':blocks}))\n        return behaviors\n    }\n}\n\nclass ResponseBlocks extends Behavior {\n    static getMembers(){\n        return ['blocks']\n    }\n\n    constructor(props) {\n        super()\n        this.blockObjects = []\n        if (props)\n            ResponseBlocks.getMembers().forEach(name => this[name] = props[name])\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    toDict() {\n        var dict = {}\n        ResponseBlocks.getMembers().forEach(name => dict[name] = this[name])\n        return dict       \n    }\n\n    validate() {\n        for (var i in this.blocks) {\n            let blockDict = this.blocks[i]\n            let block = Block.fromDict(blockDict)\n            if (SETTINGS.chains.includes(block.chainID) === false)\n                return Error.chainNotAcceptError(block.chainID())\n            let blockchain = new Blockchain(block.chainID)\n            let err = blockchain.validateBlock(block)\n            if (err != null)\n                return Error.blockValidationError(err)\n            this.blockObjects.push(block)\n        }\n        return null\n    }\n\n    react() {\n        var behaviors = []\n        for (var i in this.blockObjects) {\n            let block = this.blockObjects[i]\n            let blockchain = new Blockchain(block.chainID)\n            blockchain.saveBlock(block)\n        }\n        return behaviors\n    }\n}\n\nclass BroadcastBlock extends Behavior {\n    static getMembers(){\n        return ['block']\n    }\n\n    static create(block)\n    {\n        return new BroadcastBlock({\n            'block' : block.toDict()\n        })\n    }\n\n    constructor(props, messageID, address) {\n        super()\n        this.blockObject = null\n        this.messageID = messageID\n        this.address = address\n        if (props)\n            BroadcastBlock.getMembers().forEach(name => this[name] = props[name])\n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n    }\n\n    toDict() {\n        var dict = {}\n        BroadcastBlock.getMembers().forEach(name => dict[name] = this[name])\n        return dict       \n    }\n\n    validate() {\n        if (messageIDs[this.messageID] === true)\n            return Error.DuplicateBroadcastError(this.messageID)\n        this.blockObject = Block.fromDict(this.block)\n        if (SETTINGS.chains.includes(this.blockObject.chainID) === false)\n            return Error.chainNotAcceptError(this.blockObject.chainID)\n        let blockchain = new Blockchain(this.blockObject.chainID)\n        let err = blockchain.validateBlock(this.blockObject)\n        if (err != null)\n            return Error.blockValidationError(err)\n        return null\n    }\n\n    react() {\n        var behaviors = []\n        let id = this.blockObject.chainID\n        let blockchain = new Blockchain(id)\n        var result = blockchain.saveBlock(this.blockObject)\n        if ((result === true) && (messageIDs[this.messageID] !== true) && (BroadcastService.shared().handler !== null)) {\n            BroadcastService.shared().handler(this)\n            messageIDs[this.messageID] = true\n            eventEmitter.emit('NEW_BLOCK', id)\n        }\n        return behaviors\n    }\n}\n\nexport {Behavior, Info, RequestPeers, ResponsePeers, RequestBlocks, ResponseBlocks, BroadcastBlock}","import Message from '../protocol/message'\nimport {Info} from '../protocol/behaviors'\nimport {log} from '../utils'\n\nclass Peer {\n    constructor(url) {\n        this.url = url\n        this.socket = null\n    }\n\n    get isConnect() {\n        if (!this.socket) {\n            return false\n        }\n        return this.socket.readyState === this.socket.OPEN\n    }\n\n    connect(handleMessage, handleClose, handleConnection) {\n        try {\n            this.socket = new WebSocket(this.url)\n        }\n        catch(err) {\n            log.info( err)\n            return false\n        }\n\n        // init socket\n        this.socket.onopen = () => {\n            let url = this.socket.url\n            log.info( url + ' is connected.')\n            let info = Info.create()\n            let message = new Message('info', info.toDict())\n            this.socket.send(message.toJSON())\n            log.info('sent info to ' + url)\n            if (handleConnection) {\n                handleConnection(this)\n            }\n        }\n        this.socket.onerror = (err) => {\n            let url = this.socket.url\n            log.info('got socket error from ' + url + ':\\n' + JSON.stringify(err))\n        }\n        this.socket.onclose = () => {\n            let url = this.socket.url\n            log.info( url + ' is closed.')\n            if (handleClose) {\n                handleClose(this)\n            }\n            // retry mechanism to be done\n        }\n        this.socket.onmessage = response => {\n            let url = this.socket.url\n            if (!handleMessage) {\n                return\n            }\n            let messages = handleMessage(response.data, url)\n            if (messages && messages.length > 0){\n                messages.forEach(msg => {\n                    this.socket.send(msg.toJSON())\n                })\n            }\n        }\n    }\n\n    close() {\n        this.socket.close(1000)\n    }\n\n    send(data) {\n        this.socket.send(data)\n    }\n}\n\nexport default Peer","import url from 'url'\n\nclass PeerStorage {\n    static savePeers(peers) {\n        let index = 'peers'\n        return localStorage.setItem(index, JSON.stringify(peers))\n    }\n\n    static getPeers() {\n        let index = 'peers'\n        let result = localStorage.getItem(index)\n        if (result == null)\n            return []\n        return JSON.parse(localStorage.getItem(index))\n    }\n\n    static addPeer(peer) {\n        var result = PeerStorage.getPeers()\n        let parserPeer = url.parse(peer)\n        var flag = true\n        for (var i in result){\n            let parser = url.parse(result[i])\n            if (parser.hostname === parserPeer.hostname && parser.port === parserPeer.port)\n                flag = false\n        }\n        if (flag){\n            result.push(peer)\n            PeerStorage.savePeers(result)\n        }\n    }\n\n    static removePeers(_peers) {\n        var peers = PeerStorage.getPeers()\n\n        _peers.map(p => p.url).forEach(url => {\n            if(peers.indexOf(url) >= 0) {\n                peers.splice(peers.indexOf(url), 1)\n            }\n        })\n        PeerStorage.savePeers(peers)\n    }\n\n    static migrate() {\n        localStorage.setItem('migrated', 'true')\n    }\n\n    static isMigrated() {\n        return localStorage.getItem('migrated') !== null\n    }\n}\n\nexport default PeerStorage","import PeerStorage from './storage'\nimport {SETTINGS} from '../utils'\nimport url from 'url'\n\nclass PeerManager {\n    static migrate()\n    {\n        if (PeerStorage.isMigrated() === false){\n            PeerManager.addPeers(SETTINGS.peers)\n        }\n        PeerStorage.migrate()\n    }\n\n    static savePeers(peers) {\n        PeerStorage.savePeers(peers)\n    }\n\n    static getPeers(count = 0) {\n        if (count === 0)\n            return PeerStorage.getPeers()\n        return PeerStorage.getPeers().slice(0, count)\n    }\n\n    static getPeersCount() {\n        return PeerStorage.getPeers().length\n    }\n\n    static addPeers(peers) {\n        for (var i in peers){\n\n            let parse = url.parse(peers[i])\n\n            var port = parse.protocol === 'ws:'? 80: 443\n            if (parse.port !== null)\n                port = parse.port\n            \n            var path = '/'\n            if (parse.path != null)\n                path = parse.path\n            \n            let peer = parse.protocol + '//' + parse.hostname + ':' + port + path\n            \n            PeerStorage.addPeer(peer)\n        }\n    }\n\n    static removePeers(peers) {\n        PeerStorage.removePeers(peers)\n    }\n}\n\nexport default PeerManager","import Message from './message'\nimport { Info, RequestPeers, ResponsePeers, RequestBlocks, ResponseBlocks, BroadcastBlock } from './behaviors'\nimport Error from './errors'\nimport {log} from '../utils'\n\nfunction handleJSONData(jsonString, address) {\n    let message = Message.fromJSON(jsonString)\n    let data = message.data\n    var behavior = null\n    if (message.type === 'info')\n        behavior = new Info(data)\n    else if (message.type === 'request:blocks')\n        behavior = new RequestBlocks(data)\n    else if (message.type === 'request:peers')\n        behavior = new RequestPeers(data)\n    else if (message.type === 'response:blocks')\n        behavior = new ResponseBlocks(data)\n    else if (message.type === 'response:peers')\n        behavior = new ResponsePeers(data)\n    else if (message.type === 'broadcast:block')\n        behavior = new BroadcastBlock(data, message.id, address)\n    else if (message.type === 'error')\n        behavior = new Error(data)\n    else {\n        return [Message.fromError(Error.invalidMessageError('can not match the message type'))]\n    }\n\n    log.info('message received, type: ' + message.type)\n\n    let err = behavior.validate()\n    if (err !== null) {\n        log.info('error message generated: ' + err.desc)\n        return [Message.fromError(err)]\n    }\n\n    return behavior.react().reduce((result, b) => {\n        let msg = Message.fromBehavior(b)\n        result.push(msg)\n        log.info('response message generated, type: ' + msg.type)\n        return result\n    }, [])\n}\n\nexport { handleJSONData }\n","import { Peer, PeerManager } from '.'\nimport { handleJSONData, BroadcastBlock, Message, BroadcastService } from '../protocol'\nimport { log } from '../utils'\n\nclass Service {\n    handleClose = (peer) => {\n        for (var i in this.peers)\n            if (this.peers[i] === peer) {\n                this.peers.splice(i, 1)\n                return\n            }\n    }\n\n    handleConnection = (peer) => {\n        this.peers.push(peer)\n    }\n\n    handleBroadcast = (broadcast) => {\n        this.broadcastBlock(broadcast.blockObject, broadcast.address, broadcast.messageID)\n    }\n\n    addPeers(urls) {\n        for (var i in urls) {\n            let peer = new Peer(urls[i])\n            peer.connect(handleJSONData, this.handleClose, this.handleConnection)\n        }\n    }\n\n    constructor() {\n        this.peers = []\n        this.addPeers(PeerManager.getPeers())\n        BroadcastService.shared().handler = this.handleBroadcast\n    }\n\n    broadcastBlock(block, notBroadcastAddress, messageID) {\n        for (var i in this.peers)\n            if (this.peers[i].url !== notBroadcastAddress) {\n                try {\n                    let data = BroadcastBlock.create(block).toDict()\n                    let message = new Message('broadcast:block', data, messageID)\n                    this.peers[i].send(message.toJSON())\n                }\n                catch (err) {\n                    log.info('failed to broadcast the block to ' + this.peers[i].url + ' due to ' + err)\n                }\n            }\n    }\n\n    getAllCurrentPeers() {\n        var urls = []\n        for (var i in this.peers)\n            urls.push(this.peers[i].url)\n        return urls\n    }\n}\n\nexport default Service","import React, { Component } from 'react'\nimport { AppBar, Toolbar, Typography, Menu, MenuItem, TextField, Button } from '@material-ui/core'\nimport Modal from '@material-ui/core/Modal'\nimport { withStyles } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { PeerManager } from 'network'\nimport { eventEmitter} from 'utils'\n\n\nconst styles = theme => ({\n    navbar: {\n        ...theme.mixins.toolbar,\n        flex: '0 0 auto',\n        width: '100%',\n    },\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    }\n})\n\nclass NavBar extends Component {\n    state = {\n        menuOpen: null,\n        modalOpen: null,\n        url: null\n    }\n\n    handleOpenPeerModal = () => {\n        this.setState({\n            modalOpen: true,\n            menuOpen: false\n        })\n    }\n\n    handleAddPeer = () => {\n        // console.log(this.state.url)\n        // TODO: sanitize input\n        PeerManager.addPeers([this.state.url])\n        this.handleModalClose()\n\n        eventEmitter.emit('PEER_ADDED')\n    }\n\n    handleClick = event => {\n        this.setState({ menuOpen: true })\n    }\n\n    handleClose = () => {\n        this.setState({ menuOpen: null })\n    }\n\n    handleModalClose = () => {\n        this.setState({ modalOpen: null })\n    }\n\n    handleChange = () => event => {\n        this.setState({\n            url: event.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props\n        const { menuOpen, modalOpen } = this.state\n\n        let modal = (\n            <Modal open={Boolean(modalOpen)} onClose={this.handleModalClose}>\n                <div className={classes.paper}>\n                    <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"(Enter peer url)\" \n                        className={classes.textField} margin=\"normal\" onChange={this.handleChange()}/>\n                    <div><Button variant=\"contained\" color=\"primary\" onClick={this.handleAddPeer}>Add</Button></div>\n                </div>\n            </Modal>\n        )\n\n        return (\n            <AppBar position=\"static\" className={classes.navbar}>\n                <Toolbar>\n                    <Menu id=\"navMenu\" open={Boolean(menuOpen)} onClose={this.handleClose}>\n                        <MenuItem onClick={this.handleOpenPeerModal}>Add Peer</MenuItem>\n                    </Menu>\n                    <IconButton aria-label=\"Menu\" onClick={this.handleClick}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Infnote Chain Browser\n                    </Typography>\n                </Toolbar>\n                {modal}\n            </AppBar>\n        )\n    }\n}\n\nexport default withStyles(styles)(NavBar)\n","import React, { Component } from 'react'\nimport { List, ListItem, ListItemText, Grid, Typography, ListItemSecondaryAction } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport PropTypes from 'prop-types'\nimport {eventEmitter} from 'utils'\nimport './Drawer.css'\n\n\nclass PeerDrawer extends Component {\n    state = {\n        selectedIndex: -1\n    }\n\n    handleRemove = (peer) => {\n        this.setState({\n            selectedIndex: -1\n        })\n\n        eventEmitter.emit('PEER_REMOVED', peer)\n    }\n\n    render() {\n        const { selectedIndex } = this.state\n        const { peers, onSelect } = this.props\n        return (\n            <Grid item className=\"drawer\">\n                <Typography variant=\"title\" className=\"title\">Peer List</Typography>\n                <List>\n                    {peers.map((peer, index) => (\n                        <ListItem \n                            button \n                            selected={selectedIndex === index} \n                            key={index} \n                            onClick={() => {\n                                this.setState({selectedIndex: index})\n                                onSelect(peer)()\n                            }} \n                        >\n                            <ListItemText primary={peer.url} primaryTypographyProps={{className: 'element'}} />\n                            <ListItemSecondaryAction>\n                                <IconButton aria-label=\"Comments\" onClick={this.handleRemove.bind(this, peer)}>\n                                    -\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    ))}\n                </List>\n            </Grid>\n        )\n    }\n}\n\nPeerDrawer.propTypes = {\n    peers: PropTypes.array,\n    onSelect: PropTypes.func,\n}\n\nexport default PeerDrawer","import React, { Component } from 'react'\nimport { List, ListItem, ListItemText, Grid, Typography } from '@material-ui/core'\nimport PropType from 'prop-types'\nimport './Drawer.css'\n\nclass ChainDrawer extends Component {\n    state = {\n        selectedIndex: -1\n    }\n\n    render() {\n        const { selectedIndex } = this.state\n        const { chains, onSelect } = this.props\n        return (\n            <Grid item className=\"drawer\">\n                <Typography variant=\"title\" className=\"title\">Chain List</Typography>\n                <List>\n                    {Object.keys(chains).map((key, index) => (\n                        <ListItem \n                            button\n                            selected={selectedIndex === index}\n                            key={index}\n                            onClick={() => {\n                                this.setState({selectedIndex: index})\n                                onSelect(key)()\n                            }}\n                        >\n                            <ListItemText \n                                primary={key} \n                                primaryTypographyProps={{className: 'element'}} \n                                secondary={'Block Count: ' + chains[key]}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            </Grid>\n        )\n    }\n}\n\nChainDrawer.propTypes = {\n    onSelect: PropType.func,\n    chains: PropType.object,\n}\n\nexport default ChainDrawer\n","import React, { Component } from 'react'\nimport { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport './Drawer.css'\n\n\nclass BlockDrawer extends Component {\n    state = {\n        selectedIndex: -1\n    }\n\n    render() {\n        const { selectedIndex } = this.state\n        const { onSelect, blocks } = this.props\n        return (\n            <Grid item className=\"drawer\">\n                <Typography variant=\"title\" className=\"title\">Block List</Typography>\n                <List>\n                    {blocks.map(index => (\n                        <ListItem \n                            button\n                            selected={selectedIndex === index}\n                            key={index}\n                            onClick={() => {\n                                this.setState({selectedIndex: index})\n                                onSelect(index)()\n                            }}>\n                            <ListItemText primary={index} primaryTypographyProps={{className: 'element'}}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </Grid>\n        )\n    }\n}\n\nBlockDrawer.propTypes = {\n    onSelect: PropTypes.func,\n    blocks: PropTypes.array\n}\n\nexport default BlockDrawer","import React, { Component } from 'react'\nimport { Grid, Typography, withStyles, Divider } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nfunction syntaxHighlight(json) {\n    if (typeof json != 'string') {\n        json = JSON.stringify(json, undefined, 2)\n    }\n    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\n    // eslint-disable-next-line no-useless-escape\n    return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n        var cls = 'number'\n        if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n                cls = 'key'\n            } else {\n                cls = 'string'\n            }\n        } else if (/true|false/.test(match)) {\n            cls = 'boolean'\n        } else if (/null/.test(match)) {\n            cls = 'null'\n        }\n        return '<span class=\"' + cls + '\">' + match + '</span>'\n    })\n}\n\nconst styles = theme => ({\n    content: {\n        width: 0,\n        flex: '1 1 auto',\n        height: '100%',\n        wordBreak: 'break-word',\n        padding: theme.spacing.unit * 2,\n        overflow: 'scroll',\n    },\n    value: {\n        fontFamily: 'Roboto Mono',\n    },\n    space: {\n        height: theme.spacing.unit * 3,\n    },\n})\n\nclass BlockContent extends Component {\n    render() {\n        const { block, classes } = this.props\n        if (!block) {\n            return <Grid item></Grid>\n        }\n\n        var date = new Date(block.time * 1000)\n\n        var payload = ''\n        var isJSON = false\n        try {\n            payload = JSON.parse(atob(block.payload))\n            payload = syntaxHighlight(payload)\n            isJSON = true\n        } catch (e) {\n            if (block.payload.length > 1000) {\n                payload = atob(block.payload).slice(0, 500) + ' ...(' + (block.payload.length - 1000) + ' bytes follow)'\n            }\n        }\n        \n\n        return (\n            <Grid item className={classes.content}>\n                <Typography variant=\"title\">Block Detail</Typography>\n                <div className={classes.space} />\n                <Typography variant=\"overline\">Time</Typography>\n                <Typography variant=\"subtitle1\" className={classes.value}>{date.toLocaleDateString() + ' ' + date.toLocaleTimeString()}</Typography>\n                <Divider />\n                <div className={classes.space} />\n                <Typography variant=\"overline\">Block Hash</Typography>\n                <Typography variant=\"subtitle1\" className={classes.value}>{block.hash}</Typography>\n                <Divider />\n                <div className={classes.space} />\n                <Typography variant=\"overline\">Previous Hash</Typography>\n                <Typography variant=\"subtitle1\" className={classes.value}>{block.prev_hash.length === 0 ? '-' : block.prev_hash}</Typography>\n                <Divider />\n                <div className={classes.space} />\n                <Typography variant=\"overline\">Signature</Typography>\n                <Typography variant=\"subtitle1\" className={classes.value}>{block.signature}</Typography>\n                <Divider />\n                <div className={classes.space} />\n\n                <Typography variant=\"overline\">Payload ({block.payload.length} bytes)</Typography>\n                {(() => {\n                    if (isJSON) {\n                        return (\n                            <Typography \n                                component=\"pre\"\n                                className={classes.value} \n                                style={{color: '#D4D4D4'}}\n                                dangerouslySetInnerHTML={{__html: payload}} \n                            />\n                        )\n                    } else {\n                        return (\n                            <Typography \n                                component=\"pre\"\n                                className={classes.value} \n                                style={{color: '#D4D4D4'}} \n                            >{payload}</Typography>\n                        )\n                    }\n                })()}\n                \n\n            </Grid>\n        )\n    }\n}\n\nBlockContent.propTypes = {\n    block: PropTypes.object\n}\n\nexport default withStyles(styles)(BlockContent)\n","import React, { Component } from 'react'\nimport { PeerDrawer, ChainDrawer, BlockDrawer } from './Drawer'\nimport { Grid, withStyles } from '@material-ui/core'\nimport { Peer, PeerManager } from 'network'\nimport { Message } from 'protocol'\nimport BlockContent from './BlockContent'\nimport { eventEmitter } from 'utils'\n\nconst style = theme => ({\n    grid: {\n        flex: '1 1 auto'\n    }\n})\n\nclass Manager extends Component {\n    state = {\n        peers: [],\n        selectedPeer: null,\n        selectedChain: null,\n        chainList: {},\n        blockList: [],\n        block: null\n    }\n\n    componentDidMount() {\n        eventEmitter.on('NEW_BLOCK', this.handleIncomingBlock.bind(this))\n        eventEmitter.on('PEER_REMOVED', this.handlePeerRemoved.bind(this))\n        eventEmitter.on('PEER_ADDED', this.handlePeerAdded.bind(this))\n\n        let peers = PeerManager.getPeers().map(url => new Peer(url))\n        this.setState({peers: peers})\n    }\n\n    handleIncomingBlock = (id) => {\n        if (!this.state.selectedPeer) return false\n\n        // update chainList\n        let newChainList = Object.assign({}, this.state.chainList)\n        Object.keys(this.state.chainList)\n            .filter(chainId => chainId === id)\n            .forEach(chainId => {\n                newChainList[chainId] += 1\n            })\n        this.setState({chainList: newChainList})\n\n        // update blockList if current chain is selected\n        if (this.state.selectedChain === id) {\n            let currBlockList = this.state.blockList.slice(0)\n            currBlockList.unshift(currBlockList.length)\n            this.setState({\n                blockList: currBlockList\n            })\n        }\n    }\n\n    handlePeerAdded = () => {\n        let peers = PeerManager.getPeers().map(url => new Peer(url))\n        this.setState({peers: peers})\n    }\n\n    handlePeerRemoved = (peer) => {\n        PeerManager.removePeers([peer])\n        let peers = this.state.peers\n        peers.splice(peers.indexOf(peer.url), 1)\n\n        this.setState({\n            peers: peers,\n            selectedPeer: null,\n            selectedChain: null,\n            chainList: {},\n            blockList: [],\n            block: null\n        })\n\n    }\n\n    handleSelectPeer = peer => () => {\n        const { selectedPeer } = this.state\n        if (peer !== selectedPeer) {\n            if (selectedPeer) {\n                selectedPeer.close()\n            }\n            if (peer.isConnect) {\n                peer.close()\n            }\n            this.setState({selectedPeer: peer})\n            peer.connect(data => {\n                let msg = Message.fromJSON(data)\n                if (msg.type === 'info') {\n                    this.setState({chainList: msg.data['chains']})\n                } \n                else if (msg.type === 'response:blocks') {\n                    let blocks = msg.data['blocks']\n                    if (blocks.length > 0) {\n                        this.setState({block: blocks[0]})\n                    }\n                }\n            })\n        }\n    }\n\n    handleSelectChain = key => () => {\n        var indexes = []\n        for (var i = this.state.chainList[key] - 1; i >= 0; i--) {\n            indexes.push(i)\n        }\n        this.setState({selectedChain: key, blockList: indexes})\n    }\n\n    handleSelectBlock = index => () => {\n        const { selectedPeer, selectedChain } = this.state\n        selectedPeer.send(JSON.stringify({\n            id: Message.generateID(),\n            type: 'request:blocks',\n            data: {\n                chain_id: selectedChain,\n                from: index,\n                to: index,\n            }\n        }))\n    }\n\n    render() {\n        const { classes } = this.props\n        const { peers, chainList, blockList, block } = this.state\n        return (\n            <Grid container className={classes.grid} direction=\"row\">\n                <PeerDrawer peers={peers} onSelect={this.handleSelectPeer} />\n                <ChainDrawer chains={chainList} onSelect={this.handleSelectChain} />\n                <BlockDrawer blocks={blockList} onSelect={this.handleSelectBlock} />\n                <BlockContent block={block} />\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(style)(Manager)\n","import React, { Component } from 'react'\nimport {Service} from '../network'\nimport NavBar from './NavBar'\nimport Manager from './Manager'\nimport { withStyles } from '@material-ui/core'\n\nlet style = theme => ({\n    container: {\n        position: 'fixed',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,   \n        display: 'flex',   \n        flexDirection: 'column',\n    }\n})\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.service = new Service()\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div className={classes.container}>\n                <NavBar />\n                <Manager />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(style)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { PeerManager } from 'network'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nPeerManager.migrate();\n","/* global Buffer */\nimport bs58 from 'bs58'\nimport { Key } from '.'\nimport createHash from 'create-hash'\n\nclass Block {\n    static fromJSON(jsonString) {\n        var data = JSON.parse(jsonString)\n        var block = Block.fromDict(data)\n        return block\n    }\n\n    static fromDict(data) {\n        var block = new Block()\n        block.blockHash = data['hash']\n        block.prevHash = data['prev_hash']\n        block.time = data['time']\n        block.signature = data['signature']\n        block.height = data['height']\n        block.payload = data['payload']\n        return block\n    }\n\n    constructor() {\n        this.blockHash = ''\n        this.prevHash = ''\n        this.time = 0\n        this.signature = ''\n        this.height = 0\n        this.payload = ''\n    }\n\n    get isGenesis() {\n        return this.height === 0\n    }\n\n    toDict() {\n        let data = {\n            'hash': this.blockHash,\n            'time': this.time,\n            'signature': this.signature,\n            'height': this.height,\n            'payload': this.payload,\n            'prev_hash': this.prevHash\n        }  \n        return data\n    }\n\n    get dataForHashing() {\n        let data = this.toDict()\n\n        var result = data['height'].toString() + data['time'].toString()\n        var buffer = new Buffer(result)\n        if (data['height'] > 0)\n            buffer = Buffer.concat([buffer, bs58.decode(data['prev_hash'])])\n        //    result += data['prev_hash'].toString()\n        var payload = Buffer.from(data['payload'], 'base64')\n        return Buffer.concat([buffer, payload])\n    }\n\n    get chainID(){\n        return Key.recoverAddress(this.signature, this.dataForHashing)\n    }\n\n    isValid() {\n        /*\n        //Debug: two confitions\n        console.log((this.height === 0 || (this.prevHash != null && this.prevHash.length > 0)))\n        console.log(bs58.encode(createHash('sha256').update(this.dataForHashing).digest()) === this.blockHash)\n        */\n        return (this.height === 0 || (this.prevHash != null && this.prevHash.length > 0)) &&\n        bs58.encode(createHash('sha256').update(this.dataForHashing).digest()) === this.blockHash \n    }\n\n    toJSON() {\n        return JSON.stringify(this.toDict())\n        //   Object.keys(this.toDict()).sort()\n    }\n}\n\nexport default Block\n"],"sourceRoot":""}